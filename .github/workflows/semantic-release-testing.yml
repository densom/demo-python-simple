on:
  push:
    branches: [semantic-version-troubleshooting]

jobs:
  semantic-version:
    runs-on: ubuntu-latest
    steps:

    - name: Checkout Deep
      uses: actions/checkout@v2
      with:
        fetch-depth: 0   

    - name: Semantic versioning
      id: semver
      uses: paulhatch/semantic-version@v4.0.2
      with:
        # The prefix to use to identify tags
        tag_prefix: "v"
        # A string which, if present in a git commit, indicates that a change represents a
        # major (breaking) change, supports regular expressions wrapped with '/'
        major_pattern: "(MAJOR)"
        # Same as above except indicating a minor change, supports regular expressions wrapped with '/'
        minor_pattern: "(MINOR)"
        # A string to determine the format of the version output
        format: "${major}.${minor}.${patch}-${increment}"
        # Optional path to check for changes. If any changes are detected in the path the
        # 'changed' output will true. Enter multiple paths separated by spaces.
        
        # change_path: "src"
        
        # Named version, will be used as suffix for name version tag
        namespace: test-semantic
        # Indicate whether short tags like 'v1' should be supported. If false only full
        # tags like 'v1.0.0' will be recognized.
        short_tags: true
        # If this is set to true, *every* commit will be treated as a new version.
        bump_each_commit: false
        
    - name: demo output
      run: echo and the version is - ${{steps.semver.outputs.version}}

    # - uses: actions/download-artifact@v2
    #   with:
    #     name: hello-exe
    #     path: dist/

    # - name: show dir listing
    #   run: ls -R

    # - name: Create the actual tag
    #   uses: ncipollo/release-action@v1
    #   with:
    #     tag: ${{steps.semver.outputs.version}}
    #     commit: make-release
    #     artifacts: "dist/hello.exe"
    #     token: ${{ secrets.GITHUB_TOKEN }}